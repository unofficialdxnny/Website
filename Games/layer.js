var gdjs;(function(f){class h{constructor(e,t){this._cameraRotation=0;this._zoomFactor=1;this._timeScale=1;this._defaultZOrder=0;this._rendererEffects={};this._name=e.name,this._hidden=!e.visibility,this._initialEffectsData=e.effects||[],this._runtimeScene=t,this._cameraX=this.getWidth()/2,this._cameraY=this.getHeight()/2,this._effectsManager=t.getGame().getEffectsManager(),this._isLightingLayer=e.isLightingLayer,this._followBaseLayerCamera=e.followBaseLayerCamera,this._clearColor=[e.ambientLightColorR/255,e.ambientLightColorG/255,e.ambientLightColorB/255,1],this._renderer=new f.LayerRenderer(this,t.getRenderer(),t.getGame().getRenderer().getPIXIRenderer()),this.show(!this._hidden);for(let r=0;r<e.effects.length;++r)this.addEffect(e.effects[r])}getRenderer(){return this._renderer}getDefaultZOrder(){return this._defaultZOrder}setDefaultZOrder(e){this._defaultZOrder=e}onGameResolutionResized(e,t){this._cameraX+=this._runtimeScene.getViewportOriginX()-e,this._cameraY+=this._runtimeScene.getViewportOriginY()-t,this._renderer.updatePosition()}getRuntimeScene(){return this._runtimeScene.getScene()}updatePreRender(e){this._followBaseLayerCamera&&this.followBaseLayer(),this._renderer.updatePreRender(),this._effectsManager.updatePreRender(this._rendererEffects,this)}getName(){return this._name}getCameraX(e){return this._forceDimensionUpdate(),this._cameraX}getCameraY(e){return this._forceDimensionUpdate(),this._cameraY}setCameraX(e,t){this._forceDimensionUpdate(),this._cameraX=e,this._renderer.updatePosition()}setCameraY(e,t){this._forceDimensionUpdate(),this._cameraY=e,this._renderer.updatePosition()}getCameraWidth(e){return this.getWidth()/this._zoomFactor}getCameraHeight(e){return this.getHeight()/this._zoomFactor}show(e){this._hidden=!e,this._renderer.updateVisibility(e)}isVisible(){return!this._hidden}setCameraZoom(e,t){this._zoomFactor=e,this._renderer.updatePosition()}getCameraZoom(e){return this._zoomFactor}getCameraRotation(e){return this._cameraRotation}setCameraRotation(e,t){this._cameraRotation=e,this._renderer.updatePosition()}convertCoords(e,t,r=0,a){let i=a||[0,0];return i=this._runtimeScene.convertCoords(e,t,i),this.applyLayerInverseTransformation(i[0],i[1],r,i)}applyLayerInverseTransformation(e,t,r,a){e-=this._runtimeScene.getViewportOriginX(),t-=this._runtimeScene.getViewportOriginY(),e/=Math.abs(this._zoomFactor),t/=Math.abs(this._zoomFactor);const i=this._cameraRotation/180*Math.PI,s=e,n=Math.cos(i),o=Math.sin(i);return e=n*e-o*t,t=o*s+n*t,a[0]=e+this.getCameraX(r),a[1]=t+this.getCameraY(r),a}convertInverseCoords(e,t,r=0,a){let i=a||[0,0];return this.applyLayerTransformation(e,t,r,i),this._runtimeScene.convertInverseCoords(i[0],i[1],i)}applyLayerTransformation(e,t,r,a){e-=this.getCameraX(r),t-=this.getCameraY(r);const i=this._cameraRotation/180*Math.PI,s=e,n=Math.cos(-i),o=Math.sin(-i);return e=n*e-o*t,t=o*s+n*t,e*=Math.abs(this._zoomFactor),t*=Math.abs(this._zoomFactor),e+=this._runtimeScene.getViewportOriginX(),t+=this._runtimeScene.getViewportOriginY(),a[0]=e,a[1]=t,a}getWidth(){return this._runtimeScene.getViewportWidth()}getHeight(){return this._runtimeScene.getViewportHeight()}_forceDimensionUpdate(){this._runtimeScene.getViewportWidth()}getInitialEffectsData(){return this._initialEffectsData}addEffect(e){this._effectsManager.addEffect(e,this._rendererEffects,this._renderer.getRendererObject(),this)}removeEffect(e){this._effectsManager.removeEffect(this._rendererEffects,this._renderer.getRendererObject(),e)}setEffectDoubleParameter(e,t,r){this._effectsManager.setEffectDoubleParameter(this._rendererEffects,e,t,r)}setEffectStringParameter(e,t,r){this._effectsManager.setEffectStringParameter(this._rendererEffects,e,t,r)}setEffectBooleanParameter(e,t,r){this._effectsManager.setEffectBooleanParameter(this._rendererEffects,e,t,r)}enableEffect(e,t){this._effectsManager.enableEffect(this._rendererEffects,e,t)}isEffectEnabled(e){return this._effectsManager.isEffectEnabled(this._rendererEffects,e)}hasEffect(e){return this._effectsManager.hasEffect(this._rendererEffects,e)}setTimeScale(e){e>=0&&(this._timeScale=e)}getTimeScale(){return this._timeScale}getElapsedTime(e){return(e||this._runtimeScene).getElapsedTime()*this._timeScale}followBaseLayer(){const e=this._runtimeScene.getLayer("");this.setCameraX(e.getCameraX()),this.setCameraY(e.getCameraY()),this.setCameraRotation(e.getCameraRotation()),this.setCameraZoom(e.getCameraZoom())}getClearColor(){return this._clearColor}setClearColor(e,t,r){this._clearColor[0]=e/255,this._clearColor[1]=t/255,this._clearColor[2]=r/255,this._renderer.updateClearColor()}setFollowBaseLayerCamera(e){this._followBaseLayerCamera=e}isLightingLayer(){return this._isLightingLayer}}f.Layer=h})(gdjs||(gdjs={}));
//# sourceMappingURL=layer.js.map
